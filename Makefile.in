# Dynamic Windows Interface Builder Makefile

CC = @CC@
RM = @RM@
CP = @CP@
MAKE = @MAKE@
MKDIR = @MKDIR@
INSTALL = @INSTALL@
PREFIX = @prefix@
TARGET = @TARGET@
SOSUFFIX=	@SOSUFFIX@
SONAME=	@SONAME@
LIBPREFIX = @LIBPREFIX@
LIBSUFFIX = @LIBSUFFIX@
prefix	= @prefix@
DISPLAYNAME = Dynamic Windows Interface Builder

include Version
VER_REV=@MERCURIAL@

LIBS = @LIBS@
INCLUDES = @INCLUDES@

CFLAGS = @CFLAGS@ @ARCH@ @PLATCCFLAGS@ -DDW_RESOURCES -DVER_MAJ=$(VER_MAJ) -DVER_MIN=$(VER_MIN) -DVER_REV=$(VER_REV) -DINSTALL_PREFIX=\"$(PREFIX)\" -D__TARGET__=\"$(TARGET)\"
LDFLAGS = @LDFLAGS@


OBJECTS = dwib.o dwib_lib.o
SOURCES = dwib.c dwib_lib.c

LIBOBJECTS = dwib_lib.o
LIBSOURCES = dwib_lib.c

# Link flags shared objects
SYSCONF_LFLAGS_SHOBJ	= @SHAREDFLAG@

# Linking shared libraries
#   - Build the $(TARGET) library, eg. lib$(TARGET).so.0.0
#   - Usually needs to incorporate $(VER_MAJ) and $(VER_MIN)
#
SYSCONF_LINK_SHLIB	= gcc
SYSCONF_LINK_TARGET_SHARED = @SYSCONF_LINK_TARGET_SHARED@
SYSCONF_LINK_LIB_SHARED	=  $(SYSCONF_LINK_SHLIB) $(SYSCONF_LFLAGS_SHOBJ) $(LIBS) \
				     -o $(SYSCONF_LINK_TARGET_SHARED) \
				     $(LIBOBJECTS) $(LFLAGS) $(SONAME); \
				 rm -f lib$(TARGET).$(SOSUFFIX) lib$(TARGET).$(SOSUFFIX).$(VER_MAJ); \
				 ln -s $(SYSCONF_LINK_TARGET_SHARED) lib$(TARGET).$(SOSUFFIX); \
				 ln -s $(SYSCONF_LINK_TARGET_SHARED) lib$(TARGET).$(SOSUFFIX).$(VER_MAJ)

# Linking static libraries
#   - Build the $(TARGET) library, eg. lib$(TARGET).a
#
SYSCONF_AR		= ar $(ARFLAGS)
SYSCONF_LINK_TARGET_STATIC = @SYSCONF_LINK_TARGET_STATIC@
SYSCONF_LINK_LIB_STATIC	= rm -f $(SYSCONF_LINK_TARGET_STATIC) ; \
				 $(SYSCONF_AR) $(SYSCONF_LINK_TARGET_STATIC) $(LIBOBJECTS)

####### Build rules

SYSCONF_LINK_TARGET = $(SYSCONF_LINK_TARGET_SHARED)
SYSCONF_LINK_LIB = $(SYSCONF_LINK_LIB_SHARED)

all: $(TARGET) $(SYSCONF_LINK_TARGET_SHARED)

$(SYSCONF_LINK_TARGET_SHARED): $(LIBOBJECTS)
	$(SYSCONF_LINK_LIB_SHARED)

$(SYSCONF_LINK_TARGET_STATIC): $(LIBOBJECTS)
	$(SYSCONF_LINK_LIB_STATIC)

$(OBJECTS):
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

resources.o:
	$(CC) $(CFLAGS) $(INCLUDES) -c gtk/resources.c

$(TARGET):  $(OBJECTS) resources.o
	$(CC) $(CFLAGS) $(INCLUDES) -o $(TARGET) $(OBJECTS) resources.o $(LDFLAGS) $(LIBS)
	-chmod +x mac/finishup.sh
	-mac/finishup.sh "$(DISPLAYNAME)" "$(TARGET)"
                
installer: $(TARGET)
	-chmod +x mac/installer.sh
	-mac/installer.sh "$(DISPLAYNAME)" "$(TARGET)"

clean: 
	$(RM) $(OBJECTS) resources.o $(TARGET) *.$(SOSUFFIX) *.$(SOSUFFIX).* *~

distclean: 
	$(RM) $(OBJECTS) resources.o $(TARGET) *~ os2/*~ win/*~ gtk/*~ config.cache config.log config.status Makefile config.h

FORCE:

install: FORCE
	$(INSTALL) -d $(prefix)/include; \
	$(INSTALL) -d $(prefix)/lib; \
	$(INSTALL) -d $(prefix)/bin; \
	$(INSTALL) dwib.h $(prefix)/include; \
	$(INSTALL) $(TARGET) $(prefix)/bin; \
	$(INSTALL) $(SYSCONF_LINK_TARGET_SHARED)  $(prefix)/lib; \
	cd $(prefix)/lib; \
	rm -f lib$(TARGET).so lib$(TARGET).so.$(VER_MAJ); \
	ln -sf $(SYSCONF_LINK_TARGET_SHARED) lib$(TARGET).$(SOSUFFIX); \
	ln -sf $(SYSCONF_LINK_TARGET_SHARED) lib$(TARGET).$(SOSUFFIX).$(VER_MAJ)
													        
resources.o: gtk/resources.c
dwib.o: dwib.c dwib.h dwib_int.h resources.h config.h
dwib_lib.o: dwib_lib.c dwib.h dwib_int.h config.h
